/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import DAO.BooksDao;
import DAO.CheckingDao;
import DAO.ClientDao;
import DAO.rmi.BooksInt;
import DAO.rmi.CheckInt;
import DAO.rmi.ClientInt;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import models.Books;
import models.CheckIn;
import models.Client;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Memento
 */
public class Checking extends javax.swing.JInternalFrame {

    //ClientDao d = new ClientDao();
//   BooksDao dao = new BooksDao();

    Registry reg;

    public Checking() throws RemoteException, NotBoundException {
        initComponents();
        this.reg = LocateRegistry.getRegistry(1300);
        reg.lookup("Client");
        reg.lookup("Books");
        reg.lookup("Checking");

        populate_combo();
        populate_combo2();
    }

    private void populate_combo() {
        Client cl = new Client();
        ClientDao dao = new ClientDao();
        ClientInt d;
        List<Client> bk = dao.listAll();
        DefaultComboBoxModel cModel = (DefaultComboBoxModel) clientCo.getModel();
        cModel.removeAllElements();
        bk.stream().forEach((bk1) -> {
            cModel.addElement(bk1.comboGet());
        });

    }

    private void populate_combo2() {
        Books b = new Books();
        BooksInt da;
        BooksDao dao = new BooksDao();
        List<Books> bk = dao.listAll();
        DefaultComboBoxModel cModel = (DefaultComboBoxModel) BookCo.getModel();
        cModel.removeAllElements();
        bk.stream().forEach((bk1) -> {
            cModel.addElement(bk1.comboGet());
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        dt = new com.toedter.calendar.JDateChooser();
        av = new javax.swing.JRadioButton();
        tk = new javax.swing.JRadioButton();
        btnSave = new javax.swing.JButton();
        clientCo = new javax.swing.JComboBox();
        BookCo = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        checkTable = new javax.swing.JTable();
        Display_export = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setAutoscrolls(true);

        jLabel1.setText("Client  Names:");

        jLabel2.setText("Book In:");

        jLabel3.setText("Date");

        jLabel4.setText("Status:");

        buttonGroup1.add(av);
        av.setText("Available");

        buttonGroup1.add(tk);
        tk.setText("TAKEN");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        checkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Client Name and Id", "Book Title and Id", "Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(checkTable);

        Display_export.setText("Display and Export");
        Display_export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Display_exportActionPerformed(evt);
            }
        });

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(av, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tk, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(clientCo, 0, 139, Short.MAX_VALUE)
                                    .addComponent(BookCo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dt, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Display_export, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(clientCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(BookCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(dt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Display_export)
                            .addComponent(jButton1))))
                .addGap(32, 32, 32)
                .addComponent(av)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tk)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Check In", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        CheckIn ci = new CheckIn();
        ci.setTaker(clientCo.getSelectedItem().toString());
        ci.setBookIn(BookCo.getSelectedItem().toString());
        SimpleDateFormat ft = new SimpleDateFormat();
        ci.setBorrowedOn(ft.format(dt.getDate()));
        ci.setStatus(av.isSelected() ? "Available" : "TAKEN");
        CheckingDao d = new CheckingDao();
        d.savetData(ci);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void Display_exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Display_exportActionPerformed

        CheckingDao dao = new CheckingDao();
        List<CheckIn> c;
        c = dao.getAll();
        DefaultTableModel m = (DefaultTableModel) checkTable.getModel();
        m.setRowCount(0);
        c.stream().map((c1) -> new Object[]{
            c1.getTaker(), c1.getBookIn(), c1.getBorrowedOn(), c1.getStatus()}).forEach((o) -> {
            m.addRow(o);
        });
        FileOutputStream excelout = null;
        XSSFWorkbook excelJTableExport = null;
        BufferedOutputStream bw = null;
        XSSFSheet excelSheet = null;
        DefaultTableModel model = (DefaultTableModel) checkTable.getModel();
        JFileChooser excelFileChooser = new JFileChooser();
        excelFileChooser.setDialogTitle("Save As ..");
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "xlsm");
        excelFileChooser.setFileFilter(fnef);
        int chooser = excelFileChooser.showSaveDialog(null);
        if (chooser == JFileChooser.APPROVE_OPTION) {

            try {
                excelJTableExport = new XSSFWorkbook();
                excelSheet = excelJTableExport.createSheet("Jtable Export");
                for (int i = 0; i < model.getRowCount(); i++) {
                    model.getColumnName(i);
                    XSSFRow excelRow = excelSheet.createRow(i);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        XSSFCell excelCell = excelRow.createCell(j);

                        excelCell.setCellValue(model.getValueAt(i, j).toString());
                    }

                }
                excelout = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
                bw = new BufferedOutputStream(excelout);
                try {
                    excelJTableExport.write(bw);
                } catch (IOException ex) {
                    Logger.getLogger(Checking.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null, "Done");

                try {
                    if (bw != null) {
                        bw.close();
                    }
                    if (excelout != null) {
                        excelout.close();
                    }

                    if (excelJTableExport != null) {
                        excelJTableExport.close();
                    }
                } catch (IOException ex) {

                    Logger.getLogger(Books.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (FileNotFoundException ex) {

                Logger.getLogger(Checking.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_Display_exportActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MessageFormat top = new MessageFormat("Report Table of Checking Availability of Books");
        MessageFormat end = new MessageFormat("Page{0,number,integer}");
        try {
            checkTable.print(JTable.PrintMode.NORMAL, top, end);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Can't Print", e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox BookCo;
    private javax.swing.JButton Display_export;
    private javax.swing.JRadioButton av;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    public javax.swing.JTable checkTable;
    private javax.swing.JComboBox clientCo;
    private com.toedter.calendar.JDateChooser dt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton tk;
    // End of variables declaration//GEN-END:variables
}
